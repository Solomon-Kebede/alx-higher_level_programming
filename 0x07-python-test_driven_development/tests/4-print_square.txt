===============================
 How to Use 4-print_square.py
===============================

The ``print_square(size)`` function that prints a square with the character `#`

Importing the Module

::
    >>> print_square = __import__('4-print_square').print_square

Test by passing no arguments

::
    >>> print_square()
    Traceback (most recent call last):
      ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Test by passing a positive integer argument

::
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test by passing a positive integer argument

::
    >>> print_square(4.5)
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer
    >>> print_square(-4.5)
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer

Test by passing a negative integer argument

::
    >>> print_square(-4)
    Traceback (most recent call last):
      ...
    ValueError: size must be >= 0

Test by passing a zero as an argument

::
    >>> print_square(0)
    <BLANKLINE>

Test by passing a large number #1

::
    >>> print_square(1000000000000000)
    Traceback (most recent call last):
      ...
    MemoryError

Test by passing a large number #2

::
    >>> print_square(1e500)
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer

Test by passing a negative integer argument

::
    >>> print_square("S")
    Traceback (most recent call last):
      ...
    TypeError: size must be an integer
